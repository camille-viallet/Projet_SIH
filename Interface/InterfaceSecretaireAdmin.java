/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.awt.Color;
import java.awt.Font;
import java.text.DecimalFormat;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import princetonPlainsboro.Acte;
import princetonPlainsboro.Code;
import princetonPlainsboro.DossierMedical;
import princetonPlainsboro.FicheDeSoins;
import princetonPlainsboro.LectureXML;
import princetonPlainsboro.LectureXMLPersonnel;
import princetonPlainsboro.Medecin;
import princetonPlainsboro.Patient;
import princetonPlainsboro.Personnel;
import princetonPlainsboro.PersonnelHopital;
import princetonPlainsboro.Specialite;

/**
 *
 * @author Camille
 */
public class InterfaceSecretaireAdmin extends javax.swing.JFrame {

    /**
     * Creates new form InterfaceSecretaireAdmin
     */
    DossierMedical dm;
    PersonnelHopital persHopital;

    public InterfaceSecretaireAdmin(Personnel p) {
        LectureXML test = new LectureXML("dossiers.xml");
        dm = test.getDossier();
        LectureXMLPersonnel personnel = new LectureXMLPersonnel("personnels.xml");
        persHopital = personnel.getPersonnel();
        initComponents();
        this.jLabelBonjour.setText("Bonjour " + p.getNom().toUpperCase() + " " + p.getPrenom());

        // DANS CALCULER ACTE
        for (Code code : Code.values()) {
            this.jComboBoxActe1.addItem(code);
        }
        initialiseCoutActe();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabelImage = new javax.swing.JLabel();
        jLabelBonjour = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxActe1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCoef1 = new javax.swing.JTextField();
        jPanelResultatCout = new javax.swing.JPanel();
        jLabelCoutGras = new javax.swing.JLabel();
        jLabelCout3 = new javax.swing.JLabel();
        jButtonCalculerCout = new javax.swing.JButton();
        jLabelErreurActe = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jRadioButtonMedecin = new javax.swing.JRadioButton();
        jRadioButtonPatient = new javax.swing.JRadioButton();
        jRadioButtonSpecialite = new javax.swing.JRadioButton();
        jRadioButtonActe = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hopital princeton plainsboro - Administration");

        jLabelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/dossier-ConvertImage.png"))); // NOI18N

        jLabelBonjour.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelBonjour.setText("Bonjour ");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Calculer un acte"));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Acte :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Coefficient : ");

        jPanelResultatCout.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabelCoutGras.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCoutGras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCoutGras.setText("Co√ªt :");

        jLabelCout3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCout3.setText("x");

        javax.swing.GroupLayout jPanelResultatCoutLayout = new javax.swing.GroupLayout(jPanelResultatCout);
        jPanelResultatCout.setLayout(jPanelResultatCoutLayout);
        jPanelResultatCoutLayout.setHorizontalGroup(
            jPanelResultatCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultatCoutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelResultatCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCoutGras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelCout3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelResultatCoutLayout.setVerticalGroup(
            jPanelResultatCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultatCoutLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelCoutGras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCout3)
                .addGap(5, 5, 5))
        );

        jButtonCalculerCout.setText("Calculer");
        jButtonCalculerCout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalculerCoutActionPerformed(evt);
            }
        });

        jLabelErreurActe.setForeground(new java.awt.Color(255, 0, 0));
        jLabelErreurActe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelErreurActe.setText("jLabel1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxActe1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldCoef1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelErreurActe, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelResultatCout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCalculerCout)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxActe1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldCoef1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jButtonCalculerCout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelErreurActe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelResultatCout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Visualisation des co√ªts :"));

        buttonGroup2.add(jRadioButtonMedecin);
        jRadioButtonMedecin.setText("Medecin");
        jRadioButtonMedecin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMedecinActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButtonPatient);
        jRadioButtonPatient.setText("Patient");
        jRadioButtonPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPatientActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButtonSpecialite);
        jRadioButtonSpecialite.setText("Sp√©ciali√©");
        jRadioButtonSpecialite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSpecialiteActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButtonActe);
        jRadioButtonActe.setText("Acte");
        jRadioButtonActe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonActeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel2.setText("Cliquez dans le tableau pour plus d'informations");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonMedecin)
                .addGap(26, 26, 26)
                .addComponent(jRadioButtonPatient)
                .addGap(46, 46, 46)
                .addComponent(jRadioButtonSpecialite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButtonActe)
                .addGap(38, 38, 38))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonMedecin)
                    .addComponent(jRadioButtonPatient)
                    .addComponent(jRadioButtonSpecialite)
                    .addComponent(jRadioButtonActe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelImage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelBonjour))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel1))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelImage)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabelBonjour)))
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCalculerCoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalculerCoutActionPerformed
        boolean erreur = false;
        try {
            Integer.parseInt(this.jTextFieldCoef1.getText());
        } catch (Exception e) {
            erreur = true;
        }
        if (!this.jTextFieldCoef1.getText().isEmpty() && !erreur) {
            Code codeSelectionne = Code.valueOf(this.jComboBoxActe1.getSelectedItem().toString());
            int coeff = Integer.parseInt(this.jTextFieldCoef1.getText());
            double cout = codeSelectionne.calculerCout(coeff);
            this.jLabelCoutGras.setText("Co√ªt de " + codeSelectionne.toString(coeff));
            this.jLabelCout3.setText(cout + " ‚Ç¨");
            this.jPanelResultatCout.setVisible(true);

        } else {
            this.jLabelErreurActe.setBackground(Color.red);
            this.jLabelErreurActe.setText("Erreur : Coefficient incorrect");
            this.jLabelErreurActe.setVisible(true);

        }
    }//GEN-LAST:event_jButtonCalculerCoutActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        JTable source = (JTable) evt.getSource();

        int row = source.rowAtPoint(evt.getPoint());
        int column = source.columnAtPoint(evt.getPoint());

        DefaultTableModel model = (DefaultTableModel) this.jTable.getModel();

        if (this.jRadioButtonMedecin.isSelected()) {
            int i2 = 0;
            Medecin m = this.persHopital.getListeMedecins().get(0);
            System.out.println(model.getValueAt(row, column));
            //Trouve le medecin sur lequel on a cliqu√©
            while (i2 < this.persHopital.getListeMedecins().size() && !model.getValueAt(row, column).equals(this.persHopital.getListeMedecins().get(i2).toString())) {
                i2++;
                m = this.persHopital.getListeMedecins().get(i2);

            }

            System.out.println(m);
            int nbrLignes = model.getRowCount();
            model.setColumnIdentifiers(new Object[]{"Medecin", "", "Date", "Prix"});

            System.out.println(row);
            if (model.getValueAt(row + 1, column).equals("") && row < nbrLignes - 2) {
                while (model.getValueAt(row + 1, column).equals("") && row < model.getRowCount() - 2) {
                    model.removeRow(row + 1);
                }
            } else {
                int i = 0;
                for (Patient p : dm.getListeTousPatients()) {
                    for (FicheDeSoins fiche : dm.getFichesDeSoinsPatient(p)) {
                        //for (Acte a : fiche.getActes(m)) {
                        if (fiche.getMedecin().equals(m)) {
                            DecimalFormat df = new DecimalFormat("####.##");
                            model.addRow(new Object[]{"", "Fiche de soins du :", fiche.getDate().toStringDate(), df.format(fiche.coutTotal()) + " ‚Ç¨"});
                            i++;
                        }
                        //}
                    }
                }
                model.addRow(new Object[]{"", "", "", ""});
                model.moveRow(nbrLignes, nbrLignes + i, row + 1);

            }
        } else if (this.jRadioButtonPatient.isSelected()) {
            int i2 = 0;
            Patient p = this.dm.getListeTousPatients().get(0);
            System.out.println(model.getValueAt(row, column));
            while (i2 < this.dm.getListeTousPatients().size() && !model.getValueAt(row, column).equals(this.dm.getListeTousPatients().get(i2).toString())) {
                i2++;
                p = this.dm.getListeTousPatients().get(i2);

            }
            int nbrLignes = model.getRowCount();
            model.setColumnIdentifiers(new Object[]{"Patient", "", "Date", "Prix"});

            System.out.println(row);
            if (model.getValueAt(row + 1, column).equals("") && row < nbrLignes - 2) {
                while (model.getValueAt(row + 1, column).equals("") && row < model.getRowCount() - 2) {
                    model.removeRow(row + 1);
                }
            } else {
                int i = 0;

                for (FicheDeSoins fiche : dm.getFichesDeSoinsPatient(p)) {

                    DecimalFormat df = new DecimalFormat("####.##");
                    model.addRow(new Object[]{"", "Fiche de soins du :", fiche.getDate().toStringDate(), df.format(fiche.coutTotal()) + " ‚Ç¨"});
                    i++;

                }
                model.addRow(new Object[]{"", "", "", ""});
                model.moveRow(nbrLignes, nbrLignes + i, row + 1);
            }
        } else if (this.jRadioButtonSpecialite.isSelected()) {
            int i2 = 0;
            Specialite s = Specialite.valueOf(model.getValueAt(row, column).toString());
            int nbrLignes = model.getRowCount();
            model.setColumnIdentifiers(new Object[]{"Sp√©cialit√©", "", "Date", "Prix"});

            System.out.println(row);
            if (model.getValueAt(row + 1, column).equals("") && row < nbrLignes - 2) {
                while (model.getValueAt(row + 1, column).equals("") && row < model.getRowCount() - 2) {
                    model.removeRow(row + 1);
                }
            } else {
                int i = 0;

                for (Patient p : dm.getListeTousPatients()) {
                    for (FicheDeSoins fiche : dm.getFichesDeSoinsPatient(p)) {
                        //System.out.println(fiche.getMedecin().getSpecialite());
                        //System.out.println(s);
                        if (fiche.getMedecin().getSpecialite().compareTo(s) == 0) {
                            DecimalFormat df = new DecimalFormat("####.##");
                            model.addRow(new Object[]{"", "Fiche de soins du :", fiche.getDate().toStringDate(), df.format(fiche.coutTotal()) + " ‚Ç¨"});
                            i++;
                        }

                    }
                }
                model.addRow(new Object[]{"", "", "", ""});
                model.moveRow(nbrLignes, nbrLignes + i, row + 1);
            }

        } else if (this.jRadioButtonActe.isSelected()) {
            int i2 = 0;
            Code c = Code.valueOf(model.getValueAt(row, column).toString());
            
            int nbrLignes = model.getRowCount();
            model.setColumnIdentifiers(new Object[]{"Code","Acte", "Date","Cout unitaire","Coefficient ","Prix"});

            System.out.println(row);
            if (model.getValueAt(row + 1, column).equals("") && row < nbrLignes - 2) {
                while (model.getValueAt(row + 1, column).equals("") && row < model.getRowCount() - 2) {
                    model.removeRow(row + 1);
                }
            } else {
                int i = 0;

                for (Patient p : dm.getListeTousPatients()) {
                    for (FicheDeSoins fiche : dm.getFichesDeSoinsPatient(p)) {
                        for (Acte a : fiche.getActes()) {
                            //for (Acte a : fiche.getActes(m)) {
                            if (a.getCode().compareTo(c)== 0) {
                                DecimalFormat df = new DecimalFormat("####.##");
                                model.addRow(new Object[]{"", a.getCode().toStringSansUnitaire(a.getCoef()) , a.getDate().toStringDate(),a.getCode().getCoutUnitaire(),a.getCoef(), df.format(a.cout()) + " ‚Ç¨"});
                                i++;
                            }
                            //}
                        }
                    }
                }
                model.addRow(new Object[]{"", "","", "", ""});
                model.moveRow(nbrLignes, nbrLignes + i, row + 1);
            }
        }

    }//GEN-LAST:event_jTableMouseClicked

    private void jRadioButtonMedecinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMedecinActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTable.getModel();
        model.setRowCount(0);
        model.setColumnCount(4);
        model.setColumnIdentifiers(new Object[]{"Medecin", "", "", "Prix"});
        for (Medecin medecin : this.persHopital.getListeMedecins()) {
            DecimalFormat df = new DecimalFormat("####.##");
            model.addRow(new Object[]{medecin.toString(), "", "", df.format(dm.coutMedecin(medecin)) + " ‚Ç¨"});
        }
        model.addRow(new Object[]{"", "", "", ""});
    }//GEN-LAST:event_jRadioButtonMedecinActionPerformed

    private void jRadioButtonPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPatientActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTable.getModel();
        model.setRowCount(0);
        model.setColumnCount(4);
        model.setColumnIdentifiers(new Object[]{"Patient", "", "", "Prix"});
        for (Patient patient : dm.getListeTousPatients()) {
            DecimalFormat df = new DecimalFormat("####.##");
            model.addRow(new Object[]{patient.toString(), "", "", df.format(dm.coutPatient(patient)) + " ‚Ç¨"});
        }
        model.addRow(new Object[]{"", "", "", ""});
    }//GEN-LAST:event_jRadioButtonPatientActionPerformed

    private void jRadioButtonSpecialiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSpecialiteActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTable.getModel();
        model.setRowCount(0);
        model.setColumnCount(4);
        model.setColumnIdentifiers(new Object[]{"Sp√©cialit√©", "", "", "Prix"});
        for (Specialite specialite : Specialite.values()) {
            DecimalFormat df = new DecimalFormat("####.##");
            model.addRow(new Object[]{specialite.toString(), "", "", df.format(dm.coutSpecialite(specialite.toString())) + " ‚Ç¨"});
        }
        model.addRow(new Object[]{"", "", "", ""});
    }//GEN-LAST:event_jRadioButtonSpecialiteActionPerformed

    private void jRadioButtonActeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonActeActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTable.getModel();
        model.setRowCount(0);
        model.setColumnCount(6);
        model.setColumnIdentifiers(new Object[]{"Code", "","", "Cout unitaire","Coefficient ","Prix"});
        for (Code code : Code.values()) {
            DecimalFormat df = new DecimalFormat("####.##");
            model.addRow(new Object[]{code.toString(), "", "","","", df.format(dm.coutActe(code)) + " ‚Ç¨"});
        }
        model.addRow(new Object[]{"", "", "","", ""});
    }//GEN-LAST:event_jRadioButtonActeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButtonCalculerCout;
    private javax.swing.JComboBox jComboBoxActe1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelBonjour;
    private javax.swing.JLabel jLabelCout3;
    private javax.swing.JLabel jLabelCoutGras;
    private javax.swing.JLabel jLabelErreurActe;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelResultatCout;
    private javax.swing.JRadioButton jRadioButtonActe;
    private javax.swing.JRadioButton jRadioButtonMedecin;
    private javax.swing.JRadioButton jRadioButtonPatient;
    private javax.swing.JRadioButton jRadioButtonSpecialite;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextFieldCoef1;
    // End of variables declaration//GEN-END:variables

    private void initialiseCoutActe() {
        this.jLabelCout3.setText("");
        this.jTextFieldCoef1.setText("");
        this.jPanelResultatCout.setVisible(false);
        this.jLabelErreurActe.setVisible(false);
    }

}
